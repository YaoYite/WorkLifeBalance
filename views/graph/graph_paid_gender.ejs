<!DOCTYPE html>
<meta charset="utf-8">
<style>
#select{
	position:absolute;
	top:1px;
	left:1px;
	width:180px;
	height:35px;
	font-size:20px;
}
    .axis path,
    .axis line {
        fill: none;
        stroke: grey;
        stroke-width: 1;
        shape-rendering: crispEdges;
    }
</style>
<body>
    <svg></svg>
    <script src="https://d3js.org/d3.v3.min.js"></script>
    <select id="select">
		<option value="All ages" selected="selected">All ages</option>
        <option value="21 to 24 years">21 to 24 years old</option>
        <option value="25 to 34 years">25 to 34 years old</option>
        <option value="35 to 44 years">35 to 44 years old</option>
        <option value="45 to 54 years">45 to 54 years old</option>
        <option value="55 to 64 years">55 to 64 years old</option>
    </select>
    <script>
        // Set svg width & height
        var margin = {top: 20, right: 20, bottom: 30, left: 40},
            width = 1200 - margin.left - margin.right,
            height = 800 - margin.top - margin.bottom;
        var svg = d3.select('svg')
                    .attr("width", width + margin.left + margin.right)
                    .attr("height", height + margin.top + margin.bottom)

        var tooltip = d3.select("body")
            .append("div")
            .attr("class", "tooltip")
            .style("position", "absolute")
            .style("text-align", "center")
            .style("color", "black")
            .style("width", "80px")
            .style("height", "22px")
            .style("padding", "5px")
            .style("border", "2px")
            .style("font-size", "15px")
            .style("font-family", "Futura")
            .style("background", "silver")
            .style("visibility", "hidden")
        
        d3.csv("/csv/paid_gender.csv", function (data) {
                    
                    var wg = svg.append('g').attr("class", "wg");
                    var barchart = wg.append("g")
                        .attr("transform", "translate(100,50)")
                        .attr("class", "barchart");


                    var x = d3.scale.ordinal()
                        .domain(data.map(function (d) {
                            return d['Gender'];
                        }))
                        .rangeRoundBands([0, 400], .4);

                    var y = d3.scale.linear()
                        .domain([0, 45])
                        .range([400, 0]);
                    
                    var xAxis = d3.svg.axis()
                        .scale(x)
                        .orient("bottom");

                    var yAxis = d3.svg.axis()
                        .scale(y)
                        .orient("left");

                    barchart.append("g")
                        .attr("class", "x axis")
                        .attr("transform", "translate(0," + 400 + ")")
                        .call(xAxis);
                        

                    barchart.append("g")
                        .attr("class", "y axis")
                        .call(yAxis)
                    .append("text")
                        .attr("transform", "rotate(-90)")
                        .attr("x", -110)
                        .attr("y", -45)
                        .attr("dy", ".71em")
                        .style("text-anchor", "end")
                        .text("Duration (hours)");

                    var bar = barchart.selectAll(".bar")
                        .data(data)
                        .enter().append("rect")
                        .attr("class", "bar")
                        .attr("x", function (d) {
                            return x(d['Gender']);
                        })
                        .attr("y", function(d) { return y(d["All ages"]); })
                        .attr("width", x.rangeBand())
                        .attr("height", function(d) { return 400 - y(d["All ages"]); })
                        .style("fill", 'orange');

                    bar.on("mouseover", function (d) {
                            d3.select(this).style("fill", "red")
                        if (d["All ages"]>0)
                        {return tooltip.style("visibility", "visible").text(d["All ages"]+' hours');}
                        })
                        .on("mousemove", function (d) {
                            d3.select(this).style("fill", "red");
                            return tooltip.style("top", (event.pageY - 10) + "px").style("left", (event.pageX + 10) + "px");
                        })
                        .on("mouseout", function (d) {
                            d3.select(this).style("fill", 'orange');
                            return tooltip.style('visibility', 'hidden');
                        });
                    
                    
                })
        
        d3.select('#select')
			.on("change", function () {
            d3.select('.wg').remove();
				var se = document.getElementById("select");
                var age = se.options[se.selectedIndex].value;
            if (age!= 'no')
            {genderBarchart(age);}
                
                });
        
        function genderBarchart(age) {
                d3.csv("/csv/paid_gender.csv", function (data) {
                    
                    var wg = svg.append('g').attr("class", "wg");
                    var barchart = wg.append("g")
                        .attr("transform", "translate(100,50)")
                        .attr("class", "barchart");


                    var x = d3.scale.ordinal()
                        .domain(data.map(function (d) {
                            return d['Gender'];
                        }))
                        .rangeRoundBands([0, 400], .4);

                    var y = d3.scale.linear()
                        .domain([0, 45])
                        .range([400, 0]);
                    
                    var xAxis = d3.svg.axis()
                        .scale(x)
                        .orient("bottom");

                    var yAxis = d3.svg.axis()
                        .scale(y)
                        .orient("left");

                    barchart.append("g")
                        .attr("class", "x axis")
                        .attr("transform", "translate(0," + 400 + ")")
                        .call(xAxis);
                        

                    barchart.append("g")
                        .attr("class", "y axis")
                        .call(yAxis)
                    .append("text")
                        .attr("transform", "rotate(-90)")
                        .attr("x", -110)
                        .attr("y", -45)
                        .attr("dy", ".71em")
                        .style("text-anchor", "end")
                        .text("Duration (hours)");

                    var bar = barchart.selectAll(".bar")
                        .data(data)
                        .enter().append("rect")
                        .attr("class", "bar")
                        .attr("x", function (d) {
                            return x(d['Gender']);
                        })
                        .attr("y", function(d) { return y(d[age]); })
                        .attr("width", x.rangeBand())
                        .attr("height", function(d) { return 400 - y(d[age]); })
                        .style("fill", 'orange');

                    bar.on("mouseover", function (d) {
                            d3.select(this).style("fill", "red")
                        if (d[age]>0)
                        {return tooltip.style("visibility", "visible").text(d[age]+' hours');}
                        })
                        .on("mousemove", function (d) {
                            d3.select(this).style("fill", "red");
                            return tooltip.style("top", (event.pageY - 10) + "px").style("left", (event.pageX + 10) + "px");
                        })
                        .on("mouseout", function (d) {
                            d3.select(this).style("fill", 'orange');
                            return tooltip.style('visibility', 'hidden');
                        });
                    
                    
                })
            }
    </script>
<hr>
</body>
</html>